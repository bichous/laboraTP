{"version":3,"sources":["components/404/NotFound.js","services/auth.js","context.js","components/Form.js","pages/login.js","services/product.js","pages/menu.js","components/Navbar.js","Router.js","theme.js","serviceWorker.js","index.js"],"names":["NotFound","baseURL","MY_SERVICE","axios","create","withCredentials","AUTH_SERVICE","signup","user","a","post","login","logOut","get","MyContext","createContext","MyProvider","state","formOrder","productList","combo","status","userId","totalPrice","tableId","formLogin","email","password","isLoggedIn","handleLoginInput","e","target","name","value","setState","prevState","handleOrderSubmit","preventDefault","createOrder","then","data","alert","props","history","push","catch","handleLoginSubmit","loggedUser","handleLogout","response","window","localStorage","clear","err","console","log","this","handleFile","Provider","children","Component","withRouter","Form","width","title","submit","Box","onSubmit","as","w","boxShadow","Stack","spacing","p","Heading","textAlign","Button","type","Login","Consumer","context","Flex","h","align","justify","FormControl","isRequired","InputGroup","Icon","Input","onChange","placeholder","PRODUCT_SERVICE","allProducts","createProduct","product","Menu","buttonsMenu","productsOrder","useState","inicialProducts","setProducts","inicialOrder","setOrder","newOrder","getRestDayProducts","restDayProducts","products","filter","element","menu","extra","getBreakfastProducts","breakfastProducts","hanldeClick","id","includes","index","indexOf","splice","useEffect","undefined","map","i","onClick","_id","key","marginLeft","size","price","length","marginTop","variantColor","wrap","alignItems","direction","arr2","styles","style","padding","activeStyle","color","Navbar","bg","exact","to","Router","path","component","customIcons","d","viewBox","customTheme","theme","icons","Boolean","location","hostname","match","WithTheme","ThemeProvider","CSSReset","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8JAUeA,ICTXC,EDSWD,EARf,WACE,OACE,6BACE,2C,kGCDDC,EAAU,uCAGf,IAAMC,EAAaC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMJ,YAc1CK,EAZM,CACnBC,OAAO,WAAD,4BAAE,WAAMC,GAAN,SAAAC,EAAA,sEACOP,EAAWQ,KAAK,eAAgBF,GADvC,mFAAF,mDAAC,GAGPG,MAAM,WAAD,4BAAE,WAAMH,GAAN,SAAAC,EAAA,sEACQP,EAAWQ,KAAK,cAAeF,GADvC,mFAAF,mDAAC,GAGNI,OAAO,WAAD,4BAAE,sBAAAH,EAAA,sEACOP,EAAWW,IAAI,gBADtB,mFAAF,kDAAC,ICZIC,EAAYC,0BAEnBC,E,2MACJC,MAAQ,CACNC,UAAW,CACTC,YAAa,GACbC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,QAAS,IAEXC,UAAW,CACTC,MAAO,GACPC,SAAU,IAEZC,YAAY,G,EAGdC,iBAAmB,SAAAC,GAAM,IAAD,EACEA,EAAEC,OAAlBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKC,UAAS,SAAAC,GAAS,sBAClBA,EADkB,CAErBV,UAAU,eACLU,EAAUV,UADN,eAENO,EAAOC,U,EAKdG,kBAAoB,SAAAN,GAClBA,EAAEO,iBADqB,MASnB,EAAKpB,MAAMC,UANbC,EAHqB,EAGrBA,YACAC,EAJqB,EAIrBA,MACAC,EALqB,EAKrBA,OACAC,EANqB,EAMrBA,OACAC,EAPqB,EAOrBA,WACAC,EARqB,EAQrBA,QAEFlB,EAAagC,YAAY,CACvBnB,cACAC,QACAC,SACAC,SACAC,aACAC,YAECe,MAAK,YAAc,EAAXC,KACP,EAAKN,UAAS,SAAAC,GAAS,sBAClBA,EADkB,CAErBjB,UAAW,CACTC,YAAa,GACbC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,WAAY,GACZC,QAAS,SAGbiB,MAAM,MACN,EAAKC,MAAMC,QAAQC,KAAK,QAEzBC,OAAM,WACLJ,MAAM,mB,EAIZK,kBAAoB,SAAAhB,GAClBA,EAAEO,iBADqB,MAEK,EAAKpB,MAAMQ,UAA/BC,EAFe,EAEfA,MAAOC,EAFQ,EAERA,SACfrB,EAAaK,MAAM,CAAEe,QAAOC,aACzBY,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,EAAKN,UAAS,SAAAC,GAAS,sBAClBA,EADkB,CAErBV,UAAW,CACTC,MAAO,GACPC,SAAU,IAEZoB,WAAYP,EAAKhC,KACjBoB,YAAY,OAEd,EAAKc,MAAMC,QAAQC,KAAK,YAEzBC,OAAM,WACLJ,MAAM,wC,EAIZO,aAAe,WACb1C,EAAaM,SACV2B,MAAK,SAAAU,GACJC,OAAOC,aAAaC,QACpB,EAAKlB,SAAS,CAAEN,YAAY,IAC5B,EAAKc,MAAMC,QAAQC,KAAK,QAEzBC,OAAM,SAAAQ,GAAG,OAAIC,QAAQC,IAAIF,O,wEAGpB,IAENpC,EAMEuC,KANFvC,MACAmB,EAKEoB,KALFpB,kBACAP,EAIE2B,KAJF3B,iBACAiB,EAGEU,KAHFV,kBACAW,EAEED,KAFFC,WACAT,EACEQ,KADFR,aAEF,OACE,kBAAClC,EAAU4C,SAAX,CACEzB,MAAO,CACLhB,QACAmB,oBACAP,mBACAiB,oBACAW,aACAT,iBAGDQ,KAAKd,MAAMiB,c,GArHKC,aA2HVC,cAAW7C,G,oFChHX8C,MAdf,YAAmD,IAAnCC,EAAkC,EAAlCA,MAAOJ,EAA2B,EAA3BA,SAAUK,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACtC,OACE,kBAACC,EAAA,EAAD,CAAKC,SAAUF,EAAQG,GAAG,OAAOC,EAAGN,GAAS,QAASO,UAAU,MAC9D,kBAACC,EAAA,EAAD,CAAOC,QAAS,EAAGC,EAAG,GACpB,kBAACC,EAAA,EAAD,CAASC,UAAU,SAASP,GAAG,MAC5BJ,GAEFL,EACD,kBAACiB,EAAA,EAAD,CAAQC,KAAK,UAAUb,MCsChBc,IChDX7E,EDgDW6E,EArCf,WACE,OACE,kBAAChE,EAAUiE,SAAX,MACG,SAAAC,GAAO,OACN,kBAACC,EAAA,EAAD,CAAMZ,EAAE,QAAQa,EAAE,OAAOC,MAAM,SAASC,QAAQ,UAC9C,kBAAC,EAAD,CAAMnB,OAAQe,EAAQlC,kBAAmBkB,MAAM,SAC7C,kBAACqB,EAAA,EAAD,CAAaC,YAAU,GACrB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgB5B,SAAU,kBAAC6B,EAAA,EAAD,CAAMxD,KAAK,YACrC,kBAACyD,EAAA,EAAD,CACEC,SAAUV,EAAQnD,iBAClB8D,YAAY,QACZ3D,KAAK,QACL6C,KAAK,QACL5C,MAAO+C,EAAQ/D,MAAMQ,UAAUC,UAIrC,kBAAC2D,EAAA,EAAD,CAAaC,YAAU,GACrB,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAgB5B,SAAU,kBAAC6B,EAAA,EAAD,CAAMxD,KAAK,WACrC,kBAACyD,EAAA,EAAD,CACEC,SAAUV,EAAQnD,iBAClB8D,YAAY,WACZ3D,KAAK,WACL6C,KAAK,WACL5C,MAAO+C,EAAQ/D,MAAMQ,UAAUE,mB,QClC5C1B,EAAU,uCAGf,IAAMC,EAAaC,IAAMC,OAAO,CAAEC,iBAAiB,EAAMJ,YAW1C2F,EATS,CACtBC,YAAY,WAAD,4BAAE,sBAAApF,EAAA,sEACEP,EAAWW,IAAI,wBADjB,mFAAF,kDAAC,GAGZiF,cAAc,WAAD,4BAAE,WAAMC,GAAN,SAAAtF,EAAA,sEACAP,EAAWQ,KAAK,kBAAmBqF,GADnC,mFAAF,mDAAC,IC8JDC,MA7Jf,WAAiB,IAKXC,EACAC,EANU,EACyBC,mBAAS,IADlC,mBACPC,EADO,KACUC,EADV,OAEmBF,mBAAS,IAF5B,mBAEPG,EAFO,KAEOC,EAFP,OAGgBJ,oBAAS,GAHzB,mBAOVhF,GAPU,UAOI,IACdqF,EAAW,GACXjF,EAAa,EAMXkF,EAAkB,uCAAG,8BAAAhG,EAAA,sEACFmF,EAAgBC,cADd,OACnB5C,EADmB,OAEnByD,EAAkBzD,EAAST,KAAKmE,SAASC,QAC7C,SAAAC,GAAO,MAAqB,aAAjBA,EAAQC,OAAwBD,EAAQE,SAErDV,EAAYK,GALa,2CAAH,qDAQlBM,EAAoB,uCAAG,8BAAAvG,EAAA,sEACJmF,EAAgBC,cADZ,OACrB5C,EADqB,OAErBgE,EAAoBhE,EAAST,KAAKmE,SAASC,QAC/C,SAAAC,GAAO,MAAqB,cAAjBA,EAAQC,QAErBT,EAAYY,GALe,2CAAH,qDAiBpBC,EAAc,SAAApF,GAAM,IAAD,EAGnBA,EADFC,OAAUE,EAFW,EAEXA,MAFW,EAEJkF,GAGnB,GAAKhG,EAAYiG,SAASnF,GAEnB,CACL,IAAMoF,EAAQlG,EAAYmG,QAAQrF,GAClCd,EAAYoG,OAAOF,EAAO,QAH1BlG,EAAYyB,KAAKX,IAkBrB,GAXAuF,qBAAU,WAzCD5B,EAAgBC,cA2CpBtD,MAAK,SAAAU,GACJ,IAAMgE,EAAoBhE,EAAST,KAAKmE,SAASC,QAC/C,SAAAC,GAAO,MAAqB,cAAjBA,EAAQC,QAErBT,EAAYY,MAEbpE,OAAM,SAAAQ,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,SAEqBoE,IAApBrB,EACF,OAAO,KA0BT,GAxBEH,EAAcG,EAAgBsB,KAAI,SAAC5F,EAAG6F,GAAJ,OAChC,kBAAC/C,EAAA,EAAD,CACEgD,QAASV,EACTjF,MAAOH,EAAE+F,IACTV,GAAIQ,EACJG,IAAKH,EACLI,WAAW,MACXC,KAAK,MAEJlG,EAAEE,KARL,IAQW,6BARX,OASOF,EAAEmG,UAKe,IAAxB3B,EAAa4B,QAAuC,GAAvB5B,EAAa4B,SAC5ChC,EAAgBI,EAAaoB,KAAI,SAAC5F,EAAG6F,GAAJ,OAC/B,wBAAIG,IAAKH,GACN7F,EAAEE,KADL,YACoBF,EAAEmG,UAGxB1G,EAAa+E,EAAa,GAAG2B,OAGH,IAAxB3B,EAAa4B,QAAgB5B,EAAa4B,OAAS,EAAG,CACxDhC,EAAgBI,EAAaoB,KAAI,SAAC5F,EAAG6F,GAAJ,OAC/B,wBAAIG,IAAKH,GACN7F,EAAEE,KADL,YACoBF,EAAEmG,UAGxB,IAAK,IAAIN,EAAI,EAAGA,EAAIrB,EAAa4B,OAAQP,IACvCpG,GAAc+E,EAAaqB,GAAGM,MAIlC,OACE,kBAACnH,EAAUiE,SAAX,MACG,SAAAC,GAAO,OACN,oCACE,kBAACC,EAAA,EAAD,CACEZ,EAAE,OACFa,EAAE,MACFE,QAAQ,gBACR2C,WAAW,MACXI,UAAU,QAEV,kBAACvD,EAAA,EAAD,CAAQwD,aAAa,QAAQR,QAASZ,GAAtC,YAGA,kBAACpC,EAAA,EAAD,CAAQwD,aAAa,QAAQR,QAASnB,GAAtC,gBAIF,kBAACxB,EAAA,EAAD,CAAMZ,EAAE,QAAQa,EAAE,SAChB,kBAACD,EAAA,EAAD,CACEZ,EAAE,OACFa,EAAE,OACFiD,UAAU,MACVE,KAAK,OACLjD,QAAQ,gBAEPa,GAEH,kBAAChB,EAAA,EAAD,CACEZ,EAAE,OACFa,EAAE,OACFE,QAAQ,SACRkD,WAAW,SACXC,UAAW,UAEX,4BAAKrC,GAPP,kBAQkB3E,EAChB,kBAAC0D,EAAA,EAAD,CAAMG,QAAQ,gBAAgBf,EAAE,QAC9B,kBAACO,EAAA,EAAD,CACEgD,QAAS,WA9GJ,IAAOY,IA+GoBrH,EAAjBiF,EA9GxBsB,KAAI,SAAA3B,GACHyC,EAAKpB,SAASrB,EAAQ8B,MACxBrB,EAAS5D,KAAKmD,MAGlBQ,EAASC,KAuGG,WAOA,kBAAC5B,EAAA,EAAD,sB,QC5JV6D,EAAS,CACbC,MAAO,CACLC,QAAS,QAEXC,YAAa,CACXC,MAAO,UAII,SAASC,EAAOpG,GAC7B,OACE,kBAAC5B,EAAUiE,SAAX,MACG,SAAAC,GAAO,OACN,kBAACC,EAAA,EAAD,CACEZ,EAAE,QACFa,EAAE,OACF6D,GAAG,WACH5D,MAAM,SACNC,QAAQ,aAENJ,EAAQ/D,MAAMW,YACd,oCACE,kBAAC,IAAD,iBAAa6G,EAAb,CAAqBO,OAAK,EAACC,GAAG,MAA9B,UAKHjE,EAAQ/D,MAAMW,YACb,oCACE,kBAAC,IAAD,iBAAa6G,EAAb,CAAqBO,OAAK,EAACC,GAAG,UAA9B,QAGA,0BAAMrB,QAAS,kBAAM5C,EAAQhC,iBAC3B,4BAAQ0F,MAAOD,EAAOC,OAAtB,gBC/BhB,IAWeQ,EAXA,kBACb,oCACE,kBAACJ,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACG,KAAK,IAAIC,UAAWtE,IACjC,kBAAC,IAAD,CAAOkE,OAAK,EAACG,KAAK,QAAQC,UAAWpD,IACrC,kBAAC,IAAD,CAAOoD,UAAWpJ,O,0BCVlBqJ,EAAc,CAClB7I,KAAM,CACJ2I,KACE,0BAAMG,EAAE,4eAGVC,QAAS,cAYEC,EARE,eACZC,IADY,CAEfC,MAAM,eACDD,IAAMC,MADN,GAEAL,KCLaM,QACW,cAA7BzG,OAAO0G,SAASC,UAEe,UAA7B3G,OAAO0G,SAASC,UAEhB3G,OAAO0G,SAASC,SAASC,MACvB,2DCTN,SAASC,IACP,OACE,kBAACC,EAAA,EAAD,CAAeP,MAAOA,GACpB,kBAACQ,EAAA,EAAD,MACA,kBAAC,EAAD,OAeNC,IAASC,OAAO,mBAVhB,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAACJ,EAAD,UAMQ,MAAiBK,SAASC,eAAe,SDqGnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjI,MAAK,SAAAkI,GACjCA,EAAaC,iB","file":"static/js/main.e29a1df5.chunk.js","sourcesContent":["import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'https://laboratoria-pt.herokuapp.com')\n  : (baseURL = 'http://localhost:3000');\n\nconst MY_SERVICE = axios.create({ withCredentials: true, baseURL });\n\nconst AUTH_SERVICE = {\n  signup: async user => {\n    return await MY_SERVICE.post('/auth/signup', user);\n  },\n  login: async user => {\n    return await MY_SERVICE.post('/auth/login', user);\n  },\n  logOut: async () => {\n    return await MY_SERVICE.get('/auth/logout');\n  }\n};\n\nexport default AUTH_SERVICE;\n","import React, { Component, createContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport AUTH_SERVICE from './services/auth';\n\nexport const MyContext = createContext();\n\nclass MyProvider extends Component {\n  state = {\n    formOrder: {\n      productList: [],\n      combo: [],\n      status: '',\n      userId: '',\n      totalPrice: '',\n      tableId: ''\n    },\n    formLogin: {\n      email: '',\n      password: ''\n    },\n    isLoggedIn: false\n  };\n\n  handleLoginInput = e => {\n    const { name, value } = e.target;\n    this.setState(prevState => ({\n      ...prevState,\n      formLogin: {\n        ...prevState.formLogin,\n        [name]: value\n      }\n    }));\n  };\n\n  handleOrderSubmit = e => {\n    e.preventDefault();\n    const {\n      productList,\n      combo,\n      status,\n      userId,\n      totalPrice,\n      tableId\n    } = this.state.formOrder;\n    AUTH_SERVICE.createOrder({\n      productList,\n      combo,\n      status,\n      userId,\n      totalPrice,\n      tableId\n    })\n      .then(({ data }) => {\n        this.setState(prevState => ({\n          ...prevState,\n          formOrder: {\n            productList: [],\n            combo: [],\n            status: '',\n            userId: '',\n            totalPrice: '',\n            tableId: ''\n          }\n        }));\n        alert(':)');\n        this.props.history.push('/');\n      })\n      .catch(() => {\n        alert(':(, chaleee');\n      });\n  };\n\n  handleLoginSubmit = e => {\n    e.preventDefault();\n    const { email, password } = this.state.formLogin;\n    AUTH_SERVICE.login({ email, password })\n      .then(({ data }) => {\n        this.setState(prevState => ({\n          ...prevState,\n          formLogin: {\n            email: '',\n            password: ''\n          },\n          loggedUser: data.user,\n          isLoggedIn: true\n        }));\n        this.props.history.push('/menu');\n      })\n      .catch(() => {\n        alert('Your password or email was wrong');\n      });\n  };\n\n  handleLogout = () => {\n    AUTH_SERVICE.logOut()\n      .then(response => {\n        window.localStorage.clear();\n        this.setState({ isLoggedIn: false });\n        this.props.history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    const {\n      state,\n      handleOrderSubmit,\n      handleLoginInput,\n      handleLoginSubmit,\n      handleFile,\n      handleLogout\n    } = this;\n    return (\n      <MyContext.Provider\n        value={{\n          state,\n          handleOrderSubmit,\n          handleLoginInput,\n          handleLoginSubmit,\n          handleFile,\n          handleLogout\n        }}\n      >\n        {this.props.children}\n      </MyContext.Provider>\n    );\n  }\n}\n\nexport default withRouter(MyProvider);\n","import React from 'react';\nimport { Box, Stack, Button, Heading } from '@chakra-ui/core';\n\nfunction Form({ width, children, title, submit }) {\n  return (\n    <Box onSubmit={submit} as=\"form\" w={width || '350px'} boxShadow=\"xl\">\n      <Stack spacing={8} p={8}>\n        <Heading textAlign=\"center\" as=\"h1\">\n          {title}\n        </Heading>\n        {children}\n        <Button type=\"submit\">{title}</Button>\n      </Stack>\n    </Box>\n  );\n}\n\nexport default Form;\n","import React from 'react';\nimport { MyContext } from '../context';\nimport {\n  Flex,\n  FormControl,\n  InputGroup,\n  InputLeftAddon,\n  Input,\n  Icon\n} from '@chakra-ui/core';\nimport Form from '../components/Form';\n\nfunction Login() {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <Flex w=\"100vw\" h=\"90vh\" align=\"center\" justify=\"center\">\n          <Form submit={context.handleLoginSubmit} title=\"Login\">\n            <FormControl isRequired>\n              <InputGroup>\n                <InputLeftAddon children={<Icon name=\"email\" />} />\n                <Input\n                  onChange={context.handleLoginInput}\n                  placeholder=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={context.state.formLogin.email}\n                />\n              </InputGroup>\n            </FormControl>\n            <FormControl isRequired>\n              <InputGroup>\n                <InputLeftAddon children={<Icon name=\"lock\" />} />\n                <Input\n                  onChange={context.handleLoginInput}\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={context.state.formLogin.password}\n                />\n              </InputGroup>\n            </FormControl>\n          </Form>\n        </Flex>\n      )}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Login;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'https://laboratoria-pt.herokuapp.com')\n  : (baseURL = 'http://localhost:3000');\n\nconst MY_SERVICE = axios.create({ withCredentials: true, baseURL });\n\nconst PRODUCT_SERVICE = {\n  allProducts: async () => {\n    return await MY_SERVICE.get('/product/allProducts');\n  },\n  createProduct: async product => {\n    return await MY_SERVICE.post('/product/create', product);\n  }\n};\n\nexport default PRODUCT_SERVICE;\n","import React, { useEffect, useState } from 'react';\nimport { MyContext } from '../context';\nimport {\n  Flex,\n  FormControl,\n  InputGroup,\n  InputLeftAddon,\n  Input,\n  Icon,\n  Button\n} from '@chakra-ui/core';\nimport Form from '../components/Form';\nimport PRODUCT_SERVICE from '../services/product';\n\nfunction Menu() {\n  const [inicialProducts, setProducts] = useState([]);\n  const [inicialOrder, setOrder] = useState([]);\n  const [noOrder, setNoOrder] = useState(true);\n\n  let buttonsMenu;\n  let productsOrder;\n  let productList = [];\n  let newOrder = [];\n  let totalPrice = 0;\n\n  const getAllProducts = () => {\n    return PRODUCT_SERVICE.allProducts();\n  };\n\n  const getRestDayProducts = async () => {\n    const response = await PRODUCT_SERVICE.allProducts();\n    const restDayProducts = response.data.products.filter(\n      element => element.menu === 'Rest Day' && !element.extra\n    );\n    setProducts(restDayProducts);\n  };\n\n  const getBreakfastProducts = async () => {\n    const response = await PRODUCT_SERVICE.allProducts();\n    const breakfastProducts = response.data.products.filter(\n      element => element.menu === 'Breakfast'\n    );\n    setProducts(breakfastProducts);\n  };\n\n  const settingOrder = (arr1, arr2) => {\n    arr1.map(product => {\n      if (arr2.includes(product._id)) {\n        newOrder.push(product);\n      }\n    });\n    setOrder(newOrder);\n  };\n\n  const hanldeClick = e => {\n    const {\n      target: { value, id }\n    } = e;\n\n    if (!productList.includes(value)) {\n      productList.push(value);\n    } else {\n      const index = productList.indexOf(value);\n      productList.splice(index, 1);\n    }\n  };\n\n  useEffect(() => {\n    getAllProducts()\n      .then(response => {\n        const breakfastProducts = response.data.products.filter(\n          element => element.menu === 'Breakfast'\n        );\n        setProducts(breakfastProducts);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  if (inicialProducts === undefined) {\n    return null;\n  } else {\n    buttonsMenu = inicialProducts.map((e, i) => (\n      <Button\n        onClick={hanldeClick}\n        value={e._id}\n        id={i}\n        key={i}\n        marginLeft=\"2vw\"\n        size=\"lg\"\n      >\n        {e.name} <br />\n        S/. {e.price}\n      </Button>\n    ));\n  }\n\n  if (inicialOrder.length !== 0 && inicialOrder.length == 1) {\n    productsOrder = inicialOrder.map((e, i) => (\n      <li key={i}>\n        {e.name}....... ${e.price}\n      </li>\n    ));\n    totalPrice = inicialOrder[0].price;\n  }\n\n  if (inicialOrder.length !== 0 && inicialOrder.length > 1) {\n    productsOrder = inicialOrder.map((e, i) => (\n      <li key={i}>\n        {e.name}....... ${e.price}\n      </li>\n    ));\n    for (let i = 0; i < inicialOrder.length; i++) {\n      totalPrice += inicialOrder[i].price;\n    }\n  }\n\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <>\n          <Flex\n            w=\"25vw\"\n            h=\"6vh\"\n            justify=\"space-between\"\n            marginLeft=\"3vw\"\n            marginTop=\".5vh\"\n          >\n            <Button variantColor=\"green\" onClick={getBreakfastProducts}>\n              Desayuno\n            </Button>\n            <Button variantColor=\"green\" onClick={getRestDayProducts}>\n              Comida/Cena\n            </Button>\n          </Flex>\n          <Flex w=\"100vw\" h=\"100vh\">\n            <Flex\n              w=\"60vw\"\n              h=\"40vh\"\n              marginTop=\"4vh\"\n              wrap=\"wrap\"\n              justify=\"space-around\"\n            >\n              {buttonsMenu}\n            </Flex>\n            <Flex\n              w=\"35vw\"\n              h=\"80vh\"\n              justify=\"center\"\n              alignItems=\"center\"\n              direction={'column'}\n            >\n              <ul>{productsOrder}</ul>\n              Total price = ${totalPrice}\n              <Flex justify=\"space-between\" w=\"20vw\">\n                <Button\n                  onClick={() => {\n                    settingOrder(inicialProducts, productList);\n                  }}\n                >\n                  Preview\n                </Button>\n                <Button>Order</Button>\n              </Flex>\n            </Flex>\n          </Flex>\n        </>\n      )}\n    </MyContext.Consumer>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport { MyContext } from '../context';\nimport { NavLink } from 'react-router-dom';\nimport { Flex } from '@chakra-ui/core';\n\nconst styles = {\n  style: {\n    padding: '20px'\n  },\n  activeStyle: {\n    color: 'white'\n  }\n};\n\nexport default function Navbar(props) {\n  return (\n    <MyContext.Consumer>\n      {context => (\n        <Flex\n          w=\"100vw\"\n          h=\"10vh\"\n          bg=\"gray.500\"\n          align=\"center\"\n          justify=\"flex-end\"\n        >\n          {!context.state.isLoggedIn && (\n            <>\n              <NavLink {...styles} exact to=\"/\">\n                Login\n              </NavLink>\n            </>\n          )}\n          {context.state.isLoggedIn && (\n            <>\n              <NavLink {...styles} exact to=\"/menu\">\n                Menu\n              </NavLink>\n              <span onClick={() => context.handleLogout()}>\n                <button style={styles.style}>Logout</button>\n              </span>\n            </>\n          )}\n        </Flex>\n      )}\n    </MyContext.Consumer>\n  );\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport NotFound from './components/404/NotFound.js';\nimport Login from './pages/login';\nimport Menu from './pages/menu';\nimport Navbar from './components/Navbar';\n\nconst Router = () => (\n  <>\n    <Navbar />\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/menu\" component={Menu} />\n      <Route component={NotFound} />\n    </Switch>\n  </>\n);\n\nexport default Router;\n","import React from 'react';\nimport { theme } from '@chakra-ui/core';\n\nconst customIcons = {\n  user: {\n    path: (\n      <path d=\"M12.075,10.812c1.358-0.853,2.242-2.507,2.242-4.037c0-2.181-1.795-4.618-4.198-4.618S5.921,4.594,5.921,6.775c0,1.53,0.884,3.185,2.242,4.037c-3.222,0.865-5.6,3.807-5.6,7.298c0,0.23,0.189,0.42,0.42,0.42h14.273c0.23,0,0.42-0.189,0.42-0.42C17.676,14.619,15.297,11.677,12.075,10.812 M6.761,6.775c0-2.162,1.773-3.778,3.358-3.778s3.359,1.616,3.359,3.778c0,2.162-1.774,3.778-3.359,3.778S6.761,8.937,6.761,6.775 M3.415,17.69c0.218-3.51,3.142-6.297,6.704-6.297c3.562,0,6.486,2.787,6.705,6.297H3.415z\" />\n    ),\n    // If the icon's viewBox is `0 0 24 24`, you can ignore `viewBox`\n    viewBox: '0 0 20 20'\n  }\n};\n\nconst customTheme = {\n  ...theme,\n  icons: {\n    ...theme.icons,\n    ...customIcons\n  }\n};\n\nexport default customTheme;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport MyProvider from './context';\nimport { ThemeProvider, CSSReset } from '@chakra-ui/core';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction WithTheme() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <Router />\n    </ThemeProvider>\n  );\n}\n\nfunction WithContext() {\n  return (\n    <BrowserRouter>\n      <MyProvider>\n        <WithTheme />\n      </MyProvider>\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(<WithContext />, document.getElementById('root'));\n\n// ReactDOM.render(\n//   <ThemeProvider theme={theme}>\n//     <Router />\n//   </ThemeProvider>,\n//   document.getElementById('root')\n// )\n\nserviceWorker.unregister();\n"],"sourceRoot":""}